---
- name: Prep Pis for Clustering.
  hosts: cluster
  become: yes

  tasks:  
  - name: Set hostname.
    command: hostnamectl set-hostname {{ node_hostname }}

  - name: Enable container features on ubuntu.
    replace:
      path: /boot/firmware/cmdline.txt
      regexp: '^([\w](?!.*\b{{ item }}\b).*)$'
      replace: '\1 {{ item }}'
    with_items:
    - "cgroup_enable=cpuset"
    - "cgroup_memory=1"
    - "cgroup_enable=memory"
    when: 
      - node_arch == "arm64"
      - node_distro == "ubuntu"

  - name: Enable container features on raspbian.
    replace:
      path: /boot/cmdline.txt
      regexp: '^([\w](?!.*\b{{ item }}\b).*)$'
      replace: '\1 {{ item }}'
    with_items:
    - "cgroup_enable=cpuset"
    - "cgroup_memory=1"
    - "cgroup_enable=memory"
    when: 
      - node_arch == "arm64"
      - node_distro == "raspbian"

  - name: Reboot Pi.
    reboot:
      reboot_timeout: 3600
    when:
      - node_arch == "arm64"

  - name: Download and run K3s install script.
    shell:
      cmd: curl -sfL https://get.k3s.io | sh -
    when:
      - node_hostname == "node1"

  - name: Store controller token value in variable.
    shell:
      cmd: cat /var/lib/rancher/k3s/server/token
    register: token
    when:
      - node_hostname == "node1"

  - name: Install and add worker node
    shell:
      cmd: curl -sfL https://get.k3s.io | K3S_URL=https://{{ ansible_IP }}:6443 K3S_TOKEN={{ token.stdout }} sh -
    when: 
      - node_role == "worker"